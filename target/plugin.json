{"namespace":"amycatgirl","id":"skpd-devel","version":2,"dyna":{"repo":"amycatgirl/sketchvolt","shouldRestart":false},"entrypoint":"() => {\n  window.sketchpad = {};\n\n  window.sketchpad._open = false;\n\n  window.sketchpad._scriptLocations = {\n    func: \"https://raw.githubusercontent.com/amycatgirl/plugin-deps/main/sketchpad.js\",\n    templ: \"https://raw.githubusercontent.com/amycatgirl/plugin-deps/main/sketchpadTemplate.js\"\n  };\n\n  window.sketchpad.injectDeps = async function (type) {\n    const depSource = await (await fetch(window.sketchpad._scriptLocations[type])).text()\n\n    const dep = document.createElement('script')\n    dep.innerText = depSource\n    dep.id = `sk-${type}`\n    dep.onload = () => console.log(\"loaded\", type)\n    document.head.append(dep)\n  };\n\n\twindow.sketchpad._loadSketchpad = async function () {\n\t\tawait window.sketchpad.injectDeps(\"templ\")\n\t\tdocument.body.insertAdjacentHTML('afterbegin', window.sketchpad._html.replace(/\\\\/g, ''))\n\t\tconst skpd = document.querySelector(\"[class^='sketchpad']\")\n\t\tskpd.style = `display: none; position: absolute; width: 610px; height: 600px; bottom: 0; right: 0; z-index: 10000;`\n\t\tdocument.querySelector(\".tooling > .picker\").insertAdjacentHTML(\"afterend\", \"<canvas id='drawandchat' width=400 height=400></canvas>\")\n\t\tawait window.sketchpad.injectDeps(\"func\")\n\t};\n\n\twindow.sketchpad._unloadSketchpad = function () {\n\t\tfor (const key of Object.keys(window.sketchpad._scriptLocations)) {\n\t\t\tconst dep = document.getElementById(`sk-${key}`)\n\t\t\tdep.remove()\n\t\t}\n\n\t\tconst skpd = document.querySelector(\".sketchpad\")\n\t\tskpd.remove()\n\t\twindow.sketchpad._open = false;\n\t\tSketchpadToggleObserver.disconnect();\n\t};\n\n\twindow.sketchpad.toggleSketchpad = async function () {\n\t\tconst skpd = document.querySelector(\"[class^='sketchpad']\")\n\t\tswitch(window.sketchpad._open) {\n\t\t\tcase true:\n\t\t\t\tskpd.style.display = \"none\";\n\t\t\t\twindow.sketchpad._open = false;\n\t\t\t\tbreak;\n\n\t\t\tcase false:\n\t\t\t\tskpd.style.display = \"flex\";\n\t\t\t\twindow.sketchpad._open = true;\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\twindow.sketchpad.internal = {};\n\twindow.sketchpad.internal.dataURItoBlob = function (dataURI, callback) {\n\t\t// convert base64 to raw binary data held in a string\n\t\t// doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n\t\tvar byteString = atob(dataURI.split(',')[1]);\n\n\t\t// separate out the mime component\n\t\tvar mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n\t\t// write the bytes of the string to an ArrayBuffer\n\t\tvar ab = new ArrayBuffer(byteString.length);\n\t\tvar ia = new Uint8Array(ab);\n\t\tfor (var i = 0; i < byteString.length; i++) {\n\t\t\tia[i] = byteString.charCodeAt(i);\n\t\t}\n\n\t\t// write the ArrayBuffer to a blob, and you're done\n\t\tvar bb = new Blob([ab], {type: mimeString});\n\t\treturn bb;\n\t}\n\n\twindow.sketchpad.internal.autumnUpload = async function (blob) {\n\t\tconst form = new FormData();\n\t\tconsole.log(blob)\n\t\tconst date = new Date()\n\t\tform.append(\"file\", blob, `sketchpadDrawing-${date.toLocaleDateString()}`);\n\n\t\tconst res = await fetch(\"https://autumn.revolt.chat/attachments\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: form\n\t\t}).then(async (response) => await response.json());\n\t\treturn res.id;\n\t};\n\n\twindow.sketchpad.uploadSketchpad = async function(id, content) {\n\t\tconst _ = window.location.href.split('/');\n\t\tconst channelID = _[_.length-1];\n\n\t\tconst client = window.controllers.client.getReadyClient();\n\t\tawait client.channels.get(channelID).sendMessage({ content: content ?? \"\", attachments: [id]}).then(() => window.sketchpad.toggleSketchpad())\n\t};\n\n\t// style=\"fill: rgba(0, 0, 0, 1);transform: ;msFilter:;\"\n  const sketchpadAction = document.createElement(\"div\")\n  sketchpadAction.className = \"MessageBox__Action-sc-jul4fa-2 fIbyPH\"\n  sketchpadAction.innerHTML = `<a class='IconButton-sc-166lqkp-0 bGwznd' onclick='window.sketchpad.toggleSketchpad()'><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" class=\"StyledIconBase-ea9ulj-0 bWRyML\"><path d=\"M20 4H4c-1.103 0-2 .897-2 2v10c0 1.103.897 2 2 2h4l-1.8 2.4 1.6 1.2 2.7-3.6h3l2.7 3.6 1.6-1.2L16 18h4c1.103 0 2-.897 2-2V6c0-1.103-.897-2-2-2zM5 13h4v2H5v-2z\"></path></svg></a>`\n\n  const SketchpadToggleObserver = new MutationObserver((records) => {\n    const box = document.querySelector(\"[class^='MessageBox__Base']\")\n    if (box && !box.contains(sketchpadAction)) box.appendChild(sketchpadAction);\n  })\n\n\tsetTimeout(() => {\n\t\tSketchpadToggleObserver.observe(document.querySelector(\"[data-component='routes']\"), { subtree: true, childList: true });\n\t}, 5000);\n\n  window.sketchpad._loadSketchpad()\n\n  return {\n\t\tonUnload: () => window.sketchpad._unloadSketchpad()\n\t}\n}\n"}
